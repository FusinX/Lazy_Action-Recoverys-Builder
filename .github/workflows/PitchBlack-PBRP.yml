name: PitchBlack [PBRP]

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'PBRP Manifest Branch'
        required: true
        default: 'android-12.1'
        type: choice
        options:
        - android-12.1
        - android-11.0
      DEVICE_TREE:
        description: 'Custom Recovery Tree'
        required: true
        default: 'https://github.com/FusinX/android_device_realme_samurai'
      DEVICE_TREE_BRANCH:
        description: 'Custom Recovery Tree Branch'
        required: true
        default: 'twrp_samurai-eng-99.87.36-SP2A.220405.004-12-test-keys'
      BUILD_TARGET:
        description: 'Specify your Build Target'
        required: true
        default: 'recoveryimage'
        type: choice
        options:
        - pbrp
        - recoveryimage
    
jobs:
  build:
    name: Build PBRP by ${{ github.actor }}
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Aggressively Free Up Disk Space
      run: |
        echo "Cleaning up space..."
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc $AGENT_TOOLSDIRECTORY
        sudo apt-get clean
        docker system prune -a -f
        df -h
    
    - name: Setup build environment
      run: |
        sudo apt update && sudo apt install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev openjdk-8-jdk python3 libtinfo5 libstdc++6
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo mv ~/bin/repo /usr/bin/repo
    
    - name: Initialize repo & sync sources
      run: |
        mkdir -p android-recovery && cd android-recovery
        git config --global user.name "lazycodebuilder"
        git config --global user.email "154446636+lazycodebuilder@users.noreply.github.com"
        repo init --depth=1 -u https://github.com/PitchBlackRecoveryProject/manifest_pb.git -b ${{ inputs.MANIFEST_BRANCH }}
        repo sync -c -j$(nproc --all) --force-sync --optimized-fetch --no-clone-bundle --no-tags
    
    - name: Clone Device Tree
      run: |
        mkdir -p android-recovery/device/realme
        cd android-recovery/device/realme
        git clone ${{ inputs.DEVICE_TREE }} -b ${{ inputs.DEVICE_TREE_BRANCH }} samurai
    
    - name: Fix AndroidProducts.mk if missing
      run: |
        FILE=android-recovery/device/realme/samurai/AndroidProducts.mk
        if [ ! -f "$FILE" ]; then
          echo "Creating AndroidProducts.mk"
          cat <<EOF > "$FILE"
PRODUCT_MAKEFILES := \\
    \\$(LOCAL_DIR)/twrp_samurai.mk

COMMON_LUNCH_CHOICES := \\
    twrp_samurai-eng \\
    twrp_samurai-user \\
    twrp_samurai-userdebug
EOF
        fi
    
    - name: Ensure twrp_samurai.mk exists
      run: |
        FILE=android-recovery/device/realme/samurai/twrp_samurai.mk
        if [ ! -f "$FILE" ]; then
          echo "Creating minimal twrp_samurai.mk"
          cat <<EOF > "$FILE"
\$(call inherit-product, vendor/omni/config/common.mk)
PRODUCT_DEVICE := samurai
PRODUCT_NAME := twrp_samurai
PRODUCT_BRAND := realme
PRODUCT_MODEL := Realme X2 Pro
PRODUCT_MANUFACTURER := realme
EOF
        fi
    
    - name: Enable ccache
      run: |
        export USE_CCACHE=1
        ccache -M 10G
    
    - name: Build Recovery
      run: |
        cd android-recovery
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        if grep -q 'twrp_samurai-eng' device/realme/samurai/AndroidProducts.mk; then
          lunch twrp_samurai-eng
        else
          echo "Error: twrp_samurai-eng is not defined in AndroidProducts.mk!" && exit 1
        fi
        mka ${{ inputs.BUILD_TARGET }}
    
    - name: Check if Recovery Image Exists
      run: |
        RECOVERY_PATH="android-recovery/out/target/product/samurai/${{ inputs.BUILD_TARGET }}.img"
        if [ ! -f "$RECOVERY_PATH" ]; then
          echo "Error: ${{ inputs.BUILD_TARGET }}.img not found!" && exit 1
        fi
        echo "RECOVERY_PATH=$RECOVERY_PATH" >> $GITHUB_ENV
    
    - name: Upload Recovery Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.BUILD_TARGET }}.img
        path: ${{ env.RECOVERY_PATH }}
