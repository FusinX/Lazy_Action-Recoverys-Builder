name: Build TWRP Recovery

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'TWRP Manifest Branch'
        required: true
        default: 'twrp-8.1'
        type: choice
        options:
          - twrp-8.1
      DEVICE_TREE:
        description: 'Custom Recovery Tree'
        required: true
        default: 'https://github.com/FusinX/android_device_lenovo_brady-twrp.git'
      DEVICE_TREE_BRANCH:
        description: 'Custom Recovery Tree Branch'
        required: true
        default: 'twrp-8.0'
      BUILD_TARGET:
        description: 'Specify your Build Target'
        required: true
        default: 'recovery'
        type: choice
        options:
          - boot
          - recovery
          - vendorboot
      LDCHECK:
        description: 'Use LDCHECK'
        required: false
        default: 'false'
        type: boolean
      LDCHECKPATH:
        description: 'Path of blobs to check'
        required: true
        default: 'system/bin/qseecomd'

jobs:
  build:
    name: Build TWRP by ${{ github.actor }}
    runs-on: ubuntu-20.04
    permissions:
      contents: write

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:

    - name: Checkout current repo
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          gperf gcc-multilib g++-multilib libncurses5-dev zlib1g-dev \
          lib32z1-dev libssl-dev libxml2-utils bc ccache \
          python-is-python2 python3 python3-pip unzip zip flex bison curl

    - name: Setup Java 8
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Install Repo Tool
      run: |
        mkdir -p ~/bin
        curl -fsSL https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod +x ~/bin/repo
        echo 'export PATH=~/bin:$PATH' >> ~/.bashrc
        source ~/.bashrc
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Initialize Repo
      run: |
        mkdir -p android-recovery
        cd android-recovery
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        repo init --depth=1 -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git -b ${{ inputs.MANIFEST_BRANCH }}

    - name: Sync Source
      run: |
        cd android-recovery
        repo sync -c -j$(nproc --all) --force-sync --no-tags --no-clone-bundle

    - name: Clone Device Tree
      run: |
        cd android-recovery
        echo "Cloning device tree from ${{ inputs.DEVICE_TREE }} [${{ inputs.DEVICE_TREE_BRANCH }}]"
        git clone "${{ inputs.DEVICE_TREE }}" -b "${{ inputs.DEVICE_TREE_BRANCH }}" device/lenovo/brady

    - name: Set Build Target Environment Variable
      run: |
        case "${{ inputs.BUILD_TARGET }}" in
          recovery) echo "BUILD_TARGET_NAME=recovery" >> $GITHUB_ENV ;;
          boot) echo "BUILD_TARGET_NAME=boot" >> $GITHUB_ENV ;;
          vendorboot) echo "BUILD_TARGET_NAME=vendor_boot" >> $GITHUB_ENV ;;
          *) echo "Invalid build target"; exit 1 ;;
        esac

    - name: Start TWRP Build
      run: |
        cd android-recovery
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch twrp_brady-eng
        make clean
        make $BUILD_TARGET_NAME -j$(nproc)

    - name: LDCheck (if enabled)
      if: inputs.LDCHECK == true
      run: |
        ROOT_DIR="android-recovery/out/target/product/brady/recovery/root"
        if [ -d "$ROOT_DIR" ]; then
          echo "Running LDCheck on path: ${{ inputs.LDCHECKPATH }}"
          cd "$ROOT_DIR"
          python3 ldcheck -p system/lib64:vendor/lib64:system/lib:vendor/lib -d "${{ inputs.LDCHECKPATH }}"
        else
          echo "Recovery root directory not found. Skipping LDCheck."
        fi
      continue-on-error: true

    - name: Upload Recovery Image
      uses: actions/upload-artifact@v4
      with:
        name: TWRP-${{ inputs.BUILD_TARGET }}-Lenovo-Brady
        path: android-recovery/out/target/product/brady/${{ env.BUILD_TARGET_NAME }}.img